{
  "componentList": [
    {
      "name": "LyOption",
      "selector": "'ly-option'",
      "inputs": "[\n  \"bg\",\n  \"color\",\n  \"raised\",\n  \"disabled\",\n  \"outlined\",\n  \"elevation\",\n  \"shadowColor\",\n  \"disableRipple\"\n]",
      "exportAs": "",
      "children": "isSelected: boolean\n/** Tracks simple string values bound to the option element. */\n@Input('value') value: any\n/** The displayed value of the option. */\nviewValue: string\nselect(): void\ntoggle(): void"
    },
    {
      "name": "LySelect",
      "selector": "'ly-select'",
      "inputs": "[\n  \"tabIndex\"\n]",
      "exportAs": "'lySelect'",
      "children": "errorState: boolean\n@ContentChildren() options: QueryList\nstateChanges: Subject\n@ViewChild() templateRef: TemplateRef\n@ViewChild() valueTextDivRef: ElementRef\n/** Whether the input is disabled. */\n@Input() disabled: boolean\nempty: boolean\nfloatingLabel: boolean\nfocused: boolean\n@Input() multiple: boolean\n@Input() placeholder: string\n@Input() required: boolean\n/** Current selecteds */\nselected: any\n/** The value displayed in the trigger. */\ntriggerValue: string\n@Input() valueKey: any\nclose(): void\n/** Focuses the input. */\nfocus(): void\n/** The registered callback function called when a change event occurs on the input element. */\nonChange(_: any): void\n/** The registered callback function called when a blur event occurs on the input element. */\nonTouched(): void\nopen(): void\n/** Registers a function called when the control value changes. */\nregisterOnChange(fn: any): void\n/** Registers a function called when the control is touched. */\nregisterOnTouched(fn: any): void\n/**\n * Disables the select. Part of the ControlValueAccessor interface required\n * to integrate with Angular's core forms API.\n */\nsetDisabledState(isDisabled: boolean): void\n/** Sets the \"value\" property on the input element. */\nwriteValue(value: any): void"
    }
  ],
  "directiveList": [],
  "variableList": [
    {
      "name": "DEFAULT_DISABLE_RIPPLE",
      "children": "const DEFAULT_DISABLE_RIPPLE = false"
    },
    {
      "name": "STYLE_PRIORITY",
      "children": "const STYLE_PRIORITY = -2"
    }
  ],
  "ngModuleList": [
    {
      "name": "LySelectModule",
      "children": "import { LySelectModule } from '@alyle/ui/select'"
    }
  ]
}