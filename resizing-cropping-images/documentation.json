{"pipes":[],"interfaces":[{"name":"ImageState","id":"interface-ImageState-73c0aa9f657a5c7264938f828a15c9f0","file":"src/lib/resizing-cropping-images/resizing-cropping-images.ts","type":"interface","properties":[{"name":"isCrop","type":"boolean","optional":false,"description":"","line":122},{"name":"isLoaded","type":"boolean","optional":false,"description":"","line":121}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"ImgCropperEvent","id":"interface-ImgCropperEvent-73c0aa9f657a5c7264938f828a15c9f0","file":"src/lib/resizing-cropping-images/resizing-cropping-images.ts","type":"interface","properties":[{"name":"base64","type":"string","optional":false,"description":"","line":114},{"name":"base64Image","type":"string","optional":false,"description":"","line":113,"jsdoctags":[{"pos":2528,"end":2539,"flags":0,"kind":288,"atToken":{"pos":2528,"end":2529,"flags":0,"kind":57},"tagName":{"pos":2529,"end":2539,"flags":0,"escapedText":"deprecated"},"comment":"<p>, use <code>base64</code> instead </p>\n"}]},{"name":"height","type":"number","optional":false,"description":"","line":118},{"name":"name","type":"string","optional":false,"description":"","line":115},{"name":"type","type":"string","optional":false,"description":"","line":116},{"name":"width","type":"number","optional":false,"description":"","line":117}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"LyResizingCroppingImagesConfig","id":"interface-LyResizingCroppingImagesConfig-73c0aa9f657a5c7264938f828a15c9f0","file":"src/lib/resizing-cropping-images/resizing-cropping-images.ts","type":"interface","properties":[{"name":"antiAliased","type":"boolean","optional":true,"description":"<p>Set anti-aliased( default: true) </p>\n","line":86},{"name":"fill","type":"string | null","optional":true,"description":"<p>Background color( default: null), if is null in png is transparent but not in jpg </p>\n","line":84},{"name":"height","type":"number","optional":false,"description":"<p>Cropper area height</p>\n","line":80},{"name":"output","type":"literal type | ImageResolution | ImgResolution","optional":true,"description":"","line":87},{"name":"type","type":"string","optional":true,"description":"<p>If this is not defined, the new image will be automatically defined </p>\n","line":82},{"name":"width","type":"number","optional":false,"description":"<p>Cropper area width</p>\n","line":78}],"indexSignatures":[],"kind":150,"methods":[]}],"injectables":[],"classes":[],"modules":[{"name":"LyResizingCroppingImageModule","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"LyResizingCroppingImages"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"LyResizingCroppingImages"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]}],"miscellaneous":{"functions":[],"typealiases":[{"name":"CroppedImage","ctype":"miscellaneous","subtype":"typealias","rawtype":"ImgCropperEvent","file":"src/lib/resizing-cropping-images/resizing-cropping-images.ts","description":"","kind":161},{"name":"ImgCropperConfig","ctype":"miscellaneous","subtype":"typealias","rawtype":"LyResizingCroppingImagesConfig","file":"src/lib/resizing-cropping-images/resizing-cropping-images.ts","description":"","kind":161}],"enumerationsCode":"/** Image output */\nenum ImgResolution {\n  Default,\n  OriginalImage\n}","variablesCode":"const CONFIG_DEFAULT = <ImgCropperConfig>{\n  width: 250,\n  height: 200,\n  output: ImgResolution.Default,\n  antiAliased: true\n};\nconst STYLE_PRIORITY = -2;"},"routes":[],"coverage":{},"c_d":[{"title":"components","data":[{"name":"LyResizingCroppingImages","id":"component-LyResizingCroppingImages-73c0aa9f657a5c7264938f828a15c9f0","file":"src/lib/resizing-cropping-images/resizing-cropping-images.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ly-img-cropper, ly-cropping","styleUrls":[],"styles":[],"templateUrl":["resizing-cropping-images.html"],"viewProviders":[],"hostBindings":[],"hostListeners":[],"description":"","type":"component","preserveWhitespaces":false,"accessors":{"config":{"name":"config","setSignature":{"name":"config","type":"void","args":[{"name":"val","type":""}],"returnType":"void","line":160,"jsdoctags":[{"name":"val","type":"","tagName":{"text":"param"}}]}},"scale":{"name":"scale","getSignature":{"name":"scale","type":"number","returnType":"number","line":164,"description":"<p>Get current scale </p>\n"}},"minScale":{"name":"minScale","getSignature":{"name":"minScale","type":"number","returnType":"number","line":168,"description":"<p>Get min scale </p>\n"}}},"templateData":"<div #_imgContainer\n[className]=\"classes.imgContainer\"\n(slidestart)=\"_moveStart($event)\"\n(slide)=\"_move($event)\">\n  <img *ngIf=\"isLoaded\" [src]=\"src\">\n</div>\n<div #_croppingContainer *ngIf=\"isLoaded; else content\" [className]=\"classes.croppingContainer\" [ngStyle]=\"{\n  width: config.width + 'px',\n  height: config.height + 'px'\n}\"></div>\n<ng-template #content>\n  <div [className]=\"classes.croppContent\">\n    <input #_fileInput type=\"file\" (change)=\"selectInputEvent($event)\" accept=\"image/*\">\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","code":"isCropped: boolean\nisLoaded: boolean\nresult: string\n@Input() config: ImgCropperConfig\n/** Get current scale */\nget scale(): number\n/** Get min scale */\nget minScale(): number\n/** On crop new image */\n@Output() cropped = new EventEmitter<ImgCropperEvent>()\n/** Emit an error when the loaded image is not valid */\n@Output() error = new EventEmitter<ImgCropperEvent>()\n/** On loaded new image */\n@Output() loaded = new EventEmitter<ImgCropperEvent>()\ncenter(): void\n/** Clean the img cropper */\nclean(): void\n/**\n * Crop Image\n * Resizing & cropping image\n */\ncrop(config?: ImgCropperConfig): ImgCropperEvent\nfit(): void\n/** Ajustar a la pantalla */\nfitToScreen(): void\nselectInputEvent(img: Event): void\n/** Set the size of the image, the values can be 0 between 1, where 1 is the original size */\nsetScale(size: number): void\n/** + */\nzoomIn(): void\n/** - */\nzoomOut(): void"}]}]}