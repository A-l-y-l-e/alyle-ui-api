{
  "componentList": [
    {
      "name": "LyRadio",
      "selector": "ly-radio",
      "inputs": [
        "color",
        "disableRipple"
      ],
      "children": "@Output() change: EventEmitter\ncoreStyles: LyCoreStyles\nid: string\nname: string\n@Optional() radioGroup: LyRadioGroup\n@Input() checked: boolean\ninputId: string\n@Input() value: any"
    },
    {
      "name": "LyRadioGroup",
      "selector": "ly-radio-group",
      "exportAs": "lyRadioGroup",
      "children": "@Output() change: EventEmitter\nclasses: any\n@Input() color: string\nname: string\nngZone: NgZone\ntheme: LyTheme2\n@Input() value: any\nmarkForCheck(): void\n/**\n * Registers a callback to be triggered when the model value changes.\n * Implemented as part of ControlValueAccessor.\n */\nregisterOnChange(fn: any): void\n/**\n * Registers a callback to be triggered when the control is touched.\n * Implemented as part of ControlValueAccessor.\n */\nregisterOnTouched(fn: any): void\n/** Sets the disabled state of the control. Implemented as a part of ControlValueAccessor. */\nsetDisabledState(isDisabled: boolean): void\nupdatevalue(value: any): void\nwriteValue(value: any): void"
    }
  ],
  "directiveList": [],
  "ngModuleList": [
    {
      "name": "LyRadioModule",
      "children": "import { LyRadioModule } from '@alyle/ui/radio'"
    }
  ],
  "classList": [],
  "variableList": [
    {
      "name": "DEFAULT_DISABLE_RIPPLE",
      "children": "const DEFAULT_DISABLE_RIPPLE = false"
    },
    {
      "name": "STYLE_PRIORITY",
      "children": "const STYLE_PRIORITY = -2"
    },
    {
      "name": "STYLE_PRIORITY",
      "children": "const STYLE_PRIORITY = -2"
    }
  ],
  "objectLiteralList": [],
  "injectableList": [
    {
      "name": "LyRadioService",
      "children": "@Injectable({\n  providedIn: 'root'\n})\nclass LyRadioService {\n  classes: any\n}"
    }
  ]
}